// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Subscription.Infrastructure;

#nullable disable

namespace KeepTrackr.Api.Migrations.Subscription
{
    [DbContext(typeof(SubscriptionContext))]
    [Migration("20240731103150_Subscription_SeedData")]
    partial class Subscription_SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Subscription.Domain.Subscriptions.SubscriptionType", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Type");

                    b.ToTable("SubscriptionTypes");

                    b.HasData(
                        new
                        {
                            Type = "Standart"
                        },
                        new
                        {
                            Type = "Normal"
                        },
                        new
                        {
                            Type = "Premium"
                        });
                });

            modelBuilder.Entity("Subscription.Domain.Users.SubscriptionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SubscriptionItem");
                });

            modelBuilder.Entity("Subscription.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Subscription.Domain.Users.SubscriptionItem", b =>
                {
                    b.HasOne("Subscription.Domain.Subscriptions.SubscriptionType", null)
                        .WithOne()
                        .HasForeignKey("Subscription.Domain.Users.SubscriptionItem", "Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Subscription.Domain.Users.User", null)
                        .WithOne("SubscriptionItem")
                        .HasForeignKey("Subscription.Domain.Users.SubscriptionItem", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Subscription.Domain.Users.User", b =>
                {
                    b.Navigation("SubscriptionItem")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
